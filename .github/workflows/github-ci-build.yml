name: Kotlin CI with Gradle

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@94baf225fe0a508e581a564467443d0e2379123b # v4.3.0

      - name: Build with Gradle Wrapper
        run: ./gradlew build

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Substitute variables
        run: python3 .github/copy_secrets.py
        env:
          SECRETS: ${{ toJSON(secrets) }}
          VARS: ${{ toJSON(vars) }}

      - name: Setup Fly.io ctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy application
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  terraform:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: keycloak

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45

      - name: Set up Terraform
        if: contains(steps.changed-files.outputs.modified_files, 'terraform.tf')
        uses: hashicorp/setup-terraform@v3

      - name: Set up Python
        if: contains(steps.changed-files.outputs.modified_files, 'terraform.tf')
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Substitute variables
        if: contains(steps.changed-files.outputs.modified_files, 'terraform.tf')
        run: python3 prepare_secrets.py
        env:
          SECRETS: ${{ toJSON(secrets) }}
          VARS: ${{ toJSON(vars) }}

      - name: Terraform Init & plan & apply
        if: contains(steps.changed-files.outputs.modified_files, 'terraform.tf')
        env:
          MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
          MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
          MINIO_ENDPOINT_URL: ${{ vars.MINIO_ENDPOINT_URL }}
        run: |
          terraform init \
            -backend-config="access_key=$MINIO_ACCESS_KEY" \
            -backend-config="secret_key=$MINIO_SECRET_KEY" \
            -backend-config="endpoint=$MINIO_ENDPOINT_URL"
          terraform plan -no-color -input=false
          terraform apply -auto-approve